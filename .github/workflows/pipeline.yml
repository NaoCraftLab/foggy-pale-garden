name: Build and Release Mod

on:
  create:
    tags:
      - '*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build project
        run: ./gradlew build

      - name: Extract properties from gradle.properties
        id: properties
        run: |
          modId=$(grep 'modId' gradle.properties | cut -d'=' -f2 | xargs)
          modVersion=$(grep 'modVersion' gradle.properties | cut -d'=' -f2 | xargs)
          minecraftFirstSnapshotVersion=$(grep 'minecraftFirstSnapshotVersion' gradle.properties | cut -d'=' -f2 | xargs)
          minecraftReleaseVersion=$(grep 'minecraftReleaseVersion' gradle.properties | cut -d'=' -f2 | xargs)
          fabricSupportedLoaders=$(grep 'fabricSupportedLoaders' gradle.properties | cut -d'=' -f2 | xargs)
          loadersForModrinth=$(echo $fabricSupportedLoaders | tr ',' '\n' | tr '[:upper:]' '[:lower:]' | sed 's/^[[:space:]]*//;s/[[:space:]]*$//' | jq -R . | jq -s)
          echo "MOD_ID=$modId" >> $GITHUB_ENV
          echo "MOD_VERSION=$modVersion" >> $GITHUB_ENV
          echo "MINECRAFT_VERSIONS=Minecraft: $minecraftFirstSnapshotVersion-$minecraftReleaseVersion" >> $GITHUB_ENV
          echo "LOADERS=Loaders: $fabricSupportedLoaders" >> $GITHUB_ENV
          echo "MINECRAFT_FIRST_SNAPSHOT_VERSION=$minecraftFirstSnapshotVersion" >> $GITHUB_ENV
          echo "MINECRAFT_RELEASE_VERSION=$minecraftReleaseVersion" >> $GITHUB_ENV
          echo "LOADERS_FOR_MODRINTH=$loadersForModrinth" >> $GITHUB_ENV

      - name: Get version changelog
        id: changelog
        run: |
          VERSION=$(basename ${{ github.ref }})
          CHANGELOG=$(sed -n "/^## $VERSION$/,/^## [0-9]/p" CHANGELOG.md | sed '$d' | tail -n +2)
          echo "CHANGELOG<<EOF" >> $GITHUB_ENV
          echo "$CHANGELOG" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
        shell: bash

      - name: Combine release notes
        id: combine
        run: |
          echo "${{ env.MINECRAFT_VERSIONS }}" > combined_changelog.txt
          echo "${{ env.LOADERS }}" >> combined_changelog.txt
          echo "" >> combined_changelog.txt
          echo "## Changes" >> combined_changelog.txt
          echo "" >> combined_changelog.txt
          echo "${{ env.CHANGELOG }}" >> combined_changelog.txt
          cat combined_changelog.txt
          echo "FINAL_CHANGELOG<<EOF" >> $GITHUB_ENV
          cat combined_changelog.txt >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: "Foggy Pale Garden ${{ github.ref_name }}"
          files: build/libs/*.jar
          body: ${{ env.FINAL_CHANGELOG }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to Modrinth
        env:
          MODRINTH_TOKEN: ${{ secrets.MODRINTH_TOKEN }}
        run: |
          VERSION=$(basename ${{ github.ref }})
          primary_file="build/libs/${{ env.MOD_ID }}-${{ env.MINECRAFT_RELEASE_VERSION }}-${{ env.MOD_VERSION }}.jar"
          additional_file="build/libs/${{ env.MOD_ID }}-${{ env.MINECRAFT_RELEASE_VERSION }}-${{ env.MOD_VERSION }}-sources.jar"
          
          echo "Checking primary file: $primary_file"
          ls -lh "$primary_file"
          
          echo "Checking additional file: $additional_file"
          ls -lh "$additional_file"
          
          echo "env.LOADERS_FOR_MODRINTH: ${{ env.LOADERS_FOR_MODRINTH }}"
          
          # Формируем JSON с информацией о версии
          VERSION_DATA=$(jq -n \
            --arg name "$VERSION" \
            --arg version_number "${{ env.MOD_VERSION }}" \
            --arg changelog "${{ env.CHANGELOG }}" \
            --argjson game_versions "[\"${{ env.MINECRAFT_FIRST_SNAPSHOT_VERSION }}\", \"${{ env.MINECRAFT_RELEASE_VERSION }}\"]" \
            --argjson loaders '${{ env.LOADERS_FOR_MODRINTH }}' \
            --arg project_id "${{ env.MOD_ID }}" \
            '{
              "name": $name,
              "version_number": $version_number,
              "changelog": $changelog,
              "game_versions": $game_versions,
              "loaders": $loaders,
              "version_type": "release",
              "featured": false,
              "project_id": $project_id,
              "file_parts": ["file", "file2"],
              "primary_file": "file"
            }'
          )
          
          echo "Version Data JSON: $VERSION_DATA"
          
          curl -X POST https://api.modrinth.com/v2/version \
            -H "Authorization: $MODRINTH_TOKEN" \
            -F "data=$VERSION_DATA" \
            -F "file=@$primary_file" \
            -F "file2=@$additional_file" \
            -v

#      - name: Publish to CurseForge
#        uses: CurseForgePublishing/release-action@v1
#        with:
#          api-key: ${{ secrets.CURSEFORGE_API_KEY }}
#          game-id: "432"
#          project-id: "your-curseforge-project-id"
#          file: build/libs/*.jar
#          changelog: ${{ env.FINAL_CHANGELOG }}
#          version: ${{ github.ref_name }}
#          release-type: release